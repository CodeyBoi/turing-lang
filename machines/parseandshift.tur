states find_start find_end init op_exists goto_op BRANCH a b c not::a nand::a nand::b nand::c or::a or::b or::c not::not::a not::b 4right::a 4right::b 4right::c d shift::a shift::b shift::c shift::init q0 q1 q_ qD q& q| q! q^ shift::shift::a CHECK
syms 0 1 ( ) & D | ! _ ^
initstate find_start
finalstates HALT
table
find_start ( find_end _ R 
find_start * . . L 
find_end ) init _ L 
find_end * . . R
init _ BRANCH . N 
init 0,1 . . L
init * op_exists . L 
op_exists _ goto_op . R
op_exists * . . L 
goto_op 0,1 . . R 
goto_op * BRANCH . N
a-c & . _ L
a 0 c _ L
a 1 b _ L
b 0 not::a 1 N
b 1 not::a 0 N
c 0-1 not::a 1 N
not::a 0 4right::a 1 N
not::a 1 4right::a 0 N
nand::a-nand::c D . _ L
nand::a 0 nand::c _ L
nand::a 1 nand::b _ L
nand::b 0 4right::a 1 N
nand::b 1 4right::a 0 N
nand::c 0-1 4right::a 1 N
or::a-or::c | . _ L
or::a 1 or::c _ L 
or::a 0 or::b _ L
or::b 0-1 4right::a . N
or::c 0-1 4right::a 1 N
not::not::a 0 not::not::a _ L
not::not::a 1 not::b _ L
not::not::a ! 4right::a 1 N 
not::b ! 4right::a 0 N
BRANCH & a . R
BRANCH D nand::a . R
BRANCH | or::a . R
BRANCH ! not::not::a . R
BRANCH _ 4right::a . R
4right::a * 4right::b . R
4right::b * 4right::c . R
4right::c * d . R
d * shift::a . R
shift::shift::a * shift::b . R
shift::b * shift::c . R
shift::c * shift::init . R
shift::init 0 q0 . L
q0 * shift::shift::shift::a 0 R
shift::init 1 q1 . L
q1 * shift::shift::shift::a 1 R
shift::init _ q_ . L
q_ * shift::shift::shift::a _ R
shift::init D qD . L
qD * shift::shift::shift::a D R
shift::init & q& . L
q& * shift::shift::shift::a & R
shift::init | q| . L
q| * shift::shift::shift::a | R
shift::init ! q! . L
q! * shift::shift::shift::a ! R
shift::init ^ q^ . L
q^ * shift::shift::shift::a ^ R
shift::shift::shift::a * CHECK . R
CHECK 0,1,D,&,|,!,^ shift::init . N
CHECK * HALT . N